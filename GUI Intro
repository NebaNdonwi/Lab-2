import javafx.application.Platform;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.RadioButton;
import javafx.scene.control.TextField;
import javafx.scene.control.ToggleGroup;
import javafx.scene.control.Tooltip;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.HBox;
import javafx.scene.layout.Pane;
import javafx.scene.layout.VBox;

/**
 * This panel is the basic panel, inside which other panels are placed.  
 * Before beginning to implement, design the structure of your GUI in order to 
 * understand what panels go inside which ones, and what buttons or other components
 * go in which panels.  
 * @author ralexander
 *
 */
//make the main panel's layout be a VBox
public class FXMainPane extends VBox {

	//student Task #2:
	//  declare five buttons, a label, and a textfield
	Button myButton1 = new Button();
	Button myButton2 = new Button();
	Button myButton3 = new Button();
	Button myButton4 = new Button();
	Button myButton5 = new Button();

	Label myLabel = new Label();

	private TextField myTextField;
	//  declare two HBoxes
	HBox hbox1;
	HBox hbox2; 
	//student Task #4:
	//  declare an instance of DataManager
	private DataManager Manager;

	/**
	 * The MainPanel constructor sets up the entire GUI in this approach.  Remember to
	 * wait to add a component to its containing component until the container has
	 * been created.  This is the only constraint on the order in which the following 
	 * statements appear.
	 */
	FXMainPane() {
		//student Task #2:
		//  instantiate the buttons, label, and textfield
		myButton1 = new Button("Hello");
		myButton2 = new Button("Howdy"); 
		myButton3 = new Button("Chinese"); 
		myButton4 = new Button("Clear");
		myButton5 = new Button("Exit");
		myLabel = new Label( "Feedback");

		myTextField = new TextField();

		//  instantiate the HBoxes
		HBox hbox1 = new HBox();
		HBox hbox2 = new HBox();
		Insets inset=new Insets(15);
		//student Task #4:
		//  instantiate the DataManager instance
		Manager = new DataManager();
		//  set margins and set alignment of the components
		HBox.setMargin(myTextField, inset);
		HBox.setMargin(myButton1, inset);
		HBox.setMargin(myButton2, inset);
		HBox.setMargin(myButton3, inset);
		HBox.setMargin(myButton4, inset);
		HBox.setMargin(myButton5, inset);

		hbox1.setAlignment(Pos.CENTER);
		hbox2.setAlignment(Pos.CENTER);
		//student Task #3:
		//  add the label and textfield to one of the HBoxes
		hbox1.getChildren().addAll(myLabel, myTextField);
		//  add the buttons to the other HBox
		hbox2.getChildren().addAll(myButton1,myButton2,myButton3,myButton4,myButton5);
		//  add the HBoxes to this FXMainPanel (a VBox)
		getChildren().addAll(hbox2,hbox1);  

		myButton1.setOnAction(new ButtonHandler());
		myButton2.setOnAction(new ButtonHandler());
		myButton3.setOnAction(new ButtonHandler());
		myButton4.setOnAction(new ButtonHandler());
		myButton5.setOnAction(new ButtonHandler());	
	}

	//Task #4:
	//  create a private inner class to handle the button clicks
	private class ButtonHandler implements EventHandler<ActionEvent>
	{
		public void handle(ActionEvent event)
		{
			if (event.getTarget() == myButton1)
			{
				myTextField.setText(Manager.getHello());
			}
			else if (event.getTarget() == myButton2)
			{
				myTextField.setText(Manager.getHowdy());
			}
			else if (event.getTarget() == myButton3)
			{
				myTextField.setText(Manager.getChinese());
			}
			else if (event.getTarget() == myButton4)
			{
				myTextField.setText("");
			}
			else if (event.getTarget() == myButton5)
			{
				myTextField.setText("");
				Platform.exit();
				System.exit(0);
			}
		}

	}

}

